!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
-gpu-architecture	test/gpu_infinite_loop/Makefile	/^	nvcc --gpu-architecture=sm_$(SMV) -o $@ $^ $(CUDA_LIBPATH) $(CUDA_INC) -lcudart -lcuda $/;"	m
APP_DIR	Makefile	/^APP_DIR := $(shell pwd)\/apps$/;"	m
ASSERT	lib/gpu_forwarder.h	22;"	d
ASSERTRT	lib/gpu_forwarder.h	32;"	d
ASSERT_CUDA	lib/gpu_forwarder.h	39;"	d
BAD_INPUT_FILE	apps/lib/router.h	31;"	d
BAD_ROUTING_TABLE	apps/lib/router.h	29;"	d
BLOCK_SIZE	apps/lib/ipsec.h	36;"	d
BUILD	Makefile	/^BUILD = @echo $(counter) of $(T)$/;"	m
CANNOT_CREATE_OUTPUT	apps/lib/router.h	33;"	d
CFLAGS	Makefile	/^CFLAGS = -O3 $(shell $(PKGCONF) --cflags libdpdk)$/;"	m
CHAPTER_NUM	lib/pkt_data.h	4;"	d
CORE	src/dpdk_gpu.c	7;"	d	file:
CORE	src/dpdk_gpu.c	9;"	d	file:
CUDA	Makefile	/^CUDA ?= \/usr\/local\/cuda-10.1$/;"	m
CUDA	test/gpu_infinite_loop/Makefile	/^CUDA ?= \/usr\/local\/cuda-10.2$/;"	m
CUDA_INC	Makefile	/^CUDA_INC := -I$(CUDA)\/include $/;"	m
CUDA_INC	test/gpu_infinite_loop/Makefile	/^CUDA_INC := -I$(CUDA)\/include $/;"	m
CUDA_LIBPATH	Makefile	/^CUDA_LIBPATH := -L$(CUDA)\/lib64 -L$(CUDA)\/lib -L\/usr\/lib64\/nvidia -L\/usr\/lib\/nvidia$/;"	m
CUDA_LIBPATH	test/gpu_infinite_loop/Makefile	/^CUDA_LIBPATH := -L$(CUDA)\/lib64 -L$(CUDA)\/lib -L\/usr\/lib64\/nvidia -L\/usr\/lib\/nvidia$/;"	m
DATA_PER_THD	lib/pkt_data.h	36;"	d
DATA_PER_THD	lib/pkt_data.h	42;"	d
DATA_PER_THD	lib/pkt_data.h	49;"	d
DATA_PER_THD	lib/pkt_data.h	55;"	d
DATA_PER_THD	lib/pkt_data.h	61;"	d
DATA_PER_THD	lib/pkt_data.h	67;"	d
DATA_PER_THD	lib/pkt_data.h	73;"	d
DATA_PER_THD	lib/pkt_data.h	79;"	d
DEBUG	src/dpdkio.c	7;"	d	file:
DEFAULT_PKT_BURST	lib/dpdk.h	24;"	d
DUMP	src/dpdk_gpu.c	3;"	d	file:
END	lib/gpu_forwarder.h	52;"	d
END	lib/util.h	23;"	d
GET_UINT32_BE	apps/lib/ipsec.h	102;"	d
GF2	apps/lib/gf_tables.h	11;"	d
GF_2	apps/lib/gf_tables.h	/^static const unsigned char GF_2[256] = { GF2 };$/;"	v
GF_TABLES_H	apps/lib/gf_tables.h	9;"	d
GPU	src/util.c	3;"	d	file:
GPU_PAGE_MASK	lib/gpu_forwarder.h	43;"	d
GPU_PAGE_SHIFT	lib/gpu_forwarder.h	41;"	d
GPU_PAGE_SIZE	lib/gpu_forwarder.h	42;"	d
HEADROOM_SIZE	lib/pkt_data.h	15;"	d
HTONS32	apps/lib/ipsec.h	27;"	d
INC	Makefile	/^INC = -I$(shell pwd)\/lib -I$(APP_DIR)\/lib$/;"	m
INPUT_FILE_NOT_FOUND	apps/lib/router.h	28;"	d
INV_S	apps/lib/sbox.h	34;"	d
IOloop	src/dpdk_gpu.c	/^static void IOloop(uint8_t lid){$/;"	f	file:
IOloop	src/dpdk_gpuone.c	/^static void IOloop(uint8_t lid){$/;"	f	file:
IOloop	src/dpdkio.c	/^static void IOloop(uint8_t lid)$/;"	f	file:
IPSEC	lib/pkt_data.h	10;"	d
IPSECHEAD	lib/pkt_data.h	20;"	d
IPSECHEAD	lib/pkt_data.h	23;"	d
IPSECTAIL	lib/pkt_data.h	21;"	d
IPSECTAIL	lib/pkt_data.h	24;"	d
KEY_SIZE	apps/lib/ipsec.h	37;"	d
LARGE	test/type_conversion/type_test.c	4;"	d	file:
LDFLAGS_SHARED	Makefile	/^LDFLAGS_SHARED = $(shell $(PKGCONF) --libs libdpdk)$/;"	m
LIB_DIR	Makefile	/^LIB_DIR := $(shell pwd)\/lib$/;"	m
LINE_LENGTH	apps/lib/nids.h	16;"	d
LOOP_NUM	lib/dpdk.h	25;"	d
MAX	Makefile	/^MAX := $(foreach x, $(sixteen), $(sixteen))$/;"	m
MAXC	apps/lib/nids.h	17;"	d
MAX_MAP_LCORES	lib/l2p.h	25;"	d
MAX_MAP_PORTS	lib/l2p.h	24;"	d
MAX_MATRIX_ENTRIES	lib/l2p.h	21;"	d
MAX_PORTS	apps/lib/nids.h	18;"	d
MAX_STRING	lib/l2p.h	22;"	d
MBUF_CACHE_SIZE	lib/dpdk.h	22;"	d
MEGA	lib/util.h	25;"	d
MID	test/type_conversion/type_test.c	11;"	d	file:
MTABLE_ENTRIES_LENGTH	apps/lib/router.h	23;"	d
N	Makefile	/^N := $(wordlist 1, $T, $(MAX))$/;"	m
NF_TB_NUM	lib/pkt_data.h	34;"	d
NF_TB_NUM	lib/pkt_data.h	40;"	d
NF_TB_NUM	lib/pkt_data.h	47;"	d
NF_TB_NUM	lib/pkt_data.h	53;"	d
NF_TB_NUM	lib/pkt_data.h	59;"	d
NF_TB_NUM	lib/pkt_data.h	65;"	d
NF_TB_NUM	lib/pkt_data.h	71;"	d
NF_TB_NUM	lib/pkt_data.h	77;"	d
NF_T_NUM	lib/pkt_data.h	33;"	d
NF_T_NUM	lib/pkt_data.h	39;"	d
NF_T_NUM	lib/pkt_data.h	46;"	d
NF_T_NUM	lib/pkt_data.h	52;"	d
NF_T_NUM	lib/pkt_data.h	58;"	d
NF_T_NUM	lib/pkt_data.h	64;"	d
NF_T_NUM	lib/pkt_data.h	70;"	d
NF_T_NUM	lib/pkt_data.h	76;"	d
NIDS	lib/pkt_data.h	12;"	d
NIDS_THPERPKT	apps/lib/nids.h	38;"	d
NO_TYPE	lib/l2p.h	/^enum { NO_TYPE = 0, RX_TYPE = 0x01, TX_TYPE = 0x02 };$/;"	e	enum:__anon3
NTOHS	lib/gpu_forwarder.h	54;"	d
NUM_MBUFS_DEFAULT	lib/dpdk.h	21;"	d
NUM_ROUNDS	apps/lib/ipsec.h	38;"	d
NUM_TURN_ipsec	apps/lib/ipsec.h	13;"	d
NUM_TURN_nids	apps/lib/nids.h	13;"	d
NUM_TURN_router	apps/lib/router.h	18;"	d
OBJ_DIR	Makefile	/^OBJ_DIR := $(shell pwd)\/obj$/;"	m
OK	apps/lib/router.h	26;"	d
ONELINE	lib/pkt_data.h	8;"	d
ONE_SEC	lib/util.h	16;"	d
OUTPUT_NAME	apps/lib/router.h	25;"	d
PAD_LEN	lib/pkt_data.h	82;"	d
PARSE_ERROR	apps/lib/router.h	32;"	d
PC_FILE	Makefile	/^PC_FILE := $(shell $(PKGCONF) --path libdpdk 2>\/dev\/null)$/;"	m
PKGCONF	Makefile	/^PKGCONF = pkg-config$/;"	m
PKT_BATCH_NUM	lib/pkt_data.h	84;"	d
PKT_BATCH_SIZE	lib/pkt_data.h	85;"	d
PKT_DATA_SIZE	lib/pkt_data.h	14;"	d
PKT_MONITORING	lib/util.h	17;"	d
PKT_SIZE	lib/pkt_data.h	17;"	d
PUT_UINT32_BE	apps/lib/ipsec.h	110;"	d
R0	apps/lib/ipsec.h	150;"	d
R1	apps/lib/ipsec.h	151;"	d
R2	apps/lib/ipsec.h	152;"	d
R3	apps/lib/ipsec.h	153;"	d
R4	apps/lib/ipsec.h	154;"	d
REACHED_EOF	apps/lib/router.h	30;"	d
RING_SIZE	lib/gpu_forwarder.h	46;"	d
ROUTER	lib/pkt_data.h	11;"	d
ROUTER_TB_NUM	lib/pkt_data.h	28;"	d
ROUTER_T_NUM	lib/pkt_data.h	27;"	d
ROUTING_TABLE_NOT_FOUND	apps/lib/router.h	27;"	d
RTE_LIBRTE_ETHDEV_DEBUG	Makefile	/^RTE_LIBRTE_ETHDEV_DEBUG=y$/;"	m
RTE_LOGTYPE_APP	src/dpdkio.c	6;"	d	file:
RTE_LOG_LEVEL	Makefile	/^RTE_LOG_LEVEL=RTE_LOG_DEBUG$/;"	m
RTE_TARGET	Makefile	/^RTE_TARGET ?= $(notdir $(abspath $(dir $(firstword $(wildcard $(RTE_SDK)\/*\/.config)))))$/;"	m
RX_DESC_DEFAULT	lib/dpdk.h	23;"	d
RX_NB	lib/pkt_data.h	6;"	d
RX_TYPE	lib/l2p.h	/^enum { NO_TYPE = 0, RX_TYPE = 0x01, TX_TYPE = 0x02 };$/;"	e	enum:__anon3
Rcon	apps/lib/ipsec.h	/^static const unsigned int Rcon[] = {                                                $/;"	v
S	apps/lib/ipsec.h	119;"	d
SBOX	apps/lib/sbox.h	12;"	d
SBOX_H	apps/lib/sbox.h	9;"	d
SHA1_CTX	apps/lib/ipsec.h	/^} SHA1_CTX;                                                         $/;"	t	typeref:struct:__anon1
SHA1_DIGEST_SIZE	apps/lib/ipsec.h	71;"	d
SHA_BLOCKSIZE	apps/lib/ipsec.h	81;"	d
SHA_CTX	apps/lib/ipsec.h	/^typedef SHA1_CTX SHA_CTX;                         $/;"	t
SHA_DIGEST_LENGTH	apps/lib/ipsec.h	73;"	d
SMALL	test/type_conversion/type_test.c	15;"	d	file:
SMV	Makefile	/^SMV = 30$/;"	m
SMV	test/gpu_infinite_loop/Makefile	/^SMV = 30$/;"	m
SRC_DIR	Makefile	/^SRC_DIR := $(shell pwd)\/src$/;"	m
START_BLU	lib/gpu_forwarder.h	51;"	d
START_BLU	lib/util.h	22;"	d
START_GRN	lib/gpu_forwarder.h	49;"	d
START_GRN	lib/util.h	20;"	d
START_RED	lib/gpu_forwarder.h	48;"	d
START_RED	lib/util.h	19;"	d
START_YLW	lib/gpu_forwarder.h	50;"	d
START_YLW	lib/util.h	21;"	d
T	Makefile	/^T := $(shell $(MAKE) -nrRf $(firstword $(MAKEFILE_LIST)) $(MAKECMDGOALS) \\$/;"	m
TAILROOM_SIZE	lib/pkt_data.h	16;"	d
TEST_NUM	test/type_conversion/type_test.c	20;"	d	file:
THD_PER_PKT	lib/pkt_data.h	35;"	d
THD_PER_PKT	lib/pkt_data.h	41;"	d
THD_PER_PKT	lib/pkt_data.h	48;"	d
THD_PER_PKT	lib/pkt_data.h	54;"	d
THD_PER_PKT	lib/pkt_data.h	60;"	d
THD_PER_PKT	lib/pkt_data.h	66;"	d
THD_PER_PKT	lib/pkt_data.h	72;"	d
THD_PER_PKT	lib/pkt_data.h	78;"	d
THREAD	src/dpdk_gpu.c	5;"	d	file:
THREAD_NUM	lib/gpu_forwarder.h	45;"	d
TOUPPER	apps/lib/nids.h	36;"	d
TX	src/dpdk_gpu.c	12;"	d	file:
TX	src/dpdk_gpuone.c	3;"	d	file:
TX_TYPE	lib/l2p.h	/^enum { NO_TYPE = 0, RX_TYPE = 0x01, TX_TYPE = 0x02 };$/;"	e	enum:__anon3
WORDS_BIGENDIAN	apps/lib/ipsec.h	18;"	d
WORDS_BIGENDIAN	apps/lib/ipsec.h	22;"	d
__DPDK_GPU_H_	lib/dpdk_gpu.h	2;"	d
__DPDK_GPU_H_	lib/dpdk_gpuone.h	2;"	d
__DPDK_H_	lib/dpdk.h	2;"	d
__DPDK_IO_H_	lib/dpdkio.h	2;"	d
__GPU_FORWARDER_H_	lib/gpu_forwarder.h	2;"	d
__IPSEC_H_	apps/lib/ipsec.h	2;"	d
__MASTER_H_	lib/master.h	2;"	d
__NIDS_H_	apps/lib/nids.h	2;"	d
__PKT_DATA_H_	lib/pkt_data.h	2;"	d
__ROUTER_H_	apps/lib/router.h	2;"	d
__TEST_HANDLER_H_	test/gpu_infinite_loop/thand.h	2;"	d
__UTIL_H_	lib/util.h	2;"	d
__WR_L2P_H	lib/l2p.h	10;"	d
blk	apps/lib/ipsec.h	146;"	d
blk0	apps/lib/ipsec.h	144;"	d
buffer	apps/lib/ipsec.h	/^	uint8_t buffer[64]; \/**< SHA-1 buffer  *\/                       $/;"	m	struct:__anon1
c_state	apps/lib/ipsec.h	/^	unsigned char c_state[24];$/;"	m	union:__anon2
ck_dpdk	lib/dpdk_gpu.h	/^ck_dpdk_t ck_dpdk; $/;"	v
ck_dpdk	lib/dpdk_gpu.h	/^typedef struct ck_dpdk{$/;"	s
ck_dpdk	lib/dpdk_gpuone.h	/^ck_dpdk_t ck_dpdk; $/;"	v
ck_dpdk	lib/dpdk_gpuone.h	/^typedef struct ck_dpdk{$/;"	s
ck_dpdk	lib/dpdkio.h	/^ck_dpdk_t ck_dpdk; $/;"	v
ck_dpdk	lib/dpdkio.h	/^typedef struct ck_dpdk{$/;"	s
ck_dpdk_t	lib/dpdk_gpu.h	/^}ck_dpdk_t;$/;"	t	typeref:struct:ck_dpdk
ck_dpdk_t	lib/dpdk_gpuone.h	/^}ck_dpdk_t;$/;"	t	typeref:struct:ck_dpdk
ck_dpdk_t	lib/dpdkio.h	/^}ck_dpdk_t;$/;"	t	typeref:struct:ck_dpdk
copy_cnt	src/dpdkio.c	/^int copy_cnt = 0;$/;"	v
count	apps/lib/ipsec.h	/^	uint32_t count[2];                                              $/;"	m	struct:__anon1
counter	Makefile	/^counter = $$(($(T)-$(words $N) + 1))$(eval N := $(wordlist 2,$(words $N),$N))$/;"	m
cpu_monitoring_loop	src/util.c	/^void *cpu_monitoring_loop(void *data){$/;"	f
cpu_recv	src/dpdk_gpu.c	/^double cpu_recv = 0;$/;"	v
cpu_recv	src/dpdk_gpuone.c	/^double cpu_recv = 0;$/;"	v
cpu_recv	src/dpdkio.c	/^double cpu_recv = 0;$/;"	v
cpu_tran	src/dpdk_gpu.c	/^double cpu_tran = 0;$/;"	v
cpu_tran	src/dpdk_gpuone.c	/^double cpu_tran = 0;$/;"	v
cpu_tran	src/dpdkio.c	/^double cpu_tran = 0;$/;"	v
curr_stats	lib/dpdk_gpu.h	/^	eth_stats_t curr_stats;$/;"	m	struct:port_info
curr_stats	lib/dpdk_gpuone.h	/^	eth_stats_t curr_stats;$/;"	m	struct:port_info
curr_stats	lib/dpdkio.h	/^	eth_stats_t curr_stats;$/;"	m	struct:port_info
default_port_conf	lib/dpdk_gpu.h	/^static struct rte_eth_conf default_port_conf = {$/;"	v	typeref:struct:rte_eth_conf
default_port_conf	lib/dpdk_gpuone.h	/^static struct rte_eth_conf default_port_conf = {$/;"	v	typeref:struct:rte_eth_conf
default_port_conf	lib/dpdkio.h	/^static struct rte_eth_conf default_port_conf = {$/;"	v	typeref:struct:rte_eth_conf
dpdk_handler	src/dpdk_gpu.c	/^void dpdk_handler(int argc, char **argv)$/;"	f
dpdk_handler	src/dpdk_gpuone.c	/^void dpdk_handler(int argc, char **argv)$/;"	f
dpdk_handler	src/dpdkio.c	/^void dpdk_handler(int argc, char **argv)$/;"	f
dstFailure	apps/lib/nids.h	/^	int **dstFailure; \/\/ Failure_state (1-dimension).                      $/;"	m	struct:portGroup
dstOutput	apps/lib/nids.h	/^	int **dstOutput; \/\/ Output_state (1-dimension).                        $/;"	m	struct:portGroup
dstPortMap	apps/lib/nids.h	/^	int dstPortMap[MAX_PORTS]; \/\/ Existence of Trie for each port (1 or 0).$/;"	m	struct:portGroup
dstTrie	apps/lib/nids.h	/^	int **dstTrie; \/\/ TRIE (2-dimension).                                  $/;"	m	struct:portGroup
dstTrieDepth	apps/lib/nids.h	/^	int dstTrieDepth[MAX_PORTS]; \/\/ Depth of each Trie if it exists.       $/;"	m	struct:portGroup
esphdr	apps/lib/ipsec.h	/^struct esphdr {$/;"	s
eth_stats_t	lib/dpdk_gpu.h	/^typedef struct rte_eth_stats eth_stats_t;$/;"	t	typeref:struct:rte_eth_stats
eth_stats_t	lib/dpdk_gpuone.h	/^typedef struct rte_eth_stats eth_stats_t;$/;"	t	typeref:struct:rte_eth_stats
eth_stats_t	lib/dpdkio.h	/^typedef struct rte_eth_stats eth_stats_t;$/;"	t	typeref:struct:rte_eth_stats
get_lcore_priv	lib/l2p.h	/^get_lcore_priv(l2p_t *l2p, uint16_t lid)$/;"	f
get_lcore_rxcnt	lib/l2p.h	/^get_lcore_rxcnt(l2p_t *l2p, uint16_t lid)$/;"	f
get_lcore_txcnt	lib/l2p.h	/^get_lcore_txcnt(l2p_t *l2p, uint16_t lid)$/;"	f
get_map	lib/l2p.h	/^get_map(l2p_t *l2p, uint16_t pid, uint16_t lid)$/;"	f
get_port_lid	lib/l2p.h	/^get_port_lid(l2p_t *l2p, uint16_t pid, uint16_t qid)$/;"	f
get_port_nb_lids	lib/l2p.h	/^get_port_nb_lids(l2p_t *l2p, uint16_t pid)$/;"	f
get_port_priv	lib/l2p.h	/^get_port_priv(l2p_t *l2p, uint16_t pid)$/;"	f
get_port_rxcnt	lib/l2p.h	/^get_port_rxcnt(l2p_t *l2p, uint16_t pid)$/;"	f
get_port_txcnt	lib/l2p.h	/^get_port_txcnt(l2p_t *l2p, uint16_t pid)$/;"	f
get_rx_pid	lib/l2p.h	/^get_rx_pid(l2p_t *l2p, uint16_t lid, uint16_t idx)$/;"	f
get_rxque	lib/l2p.h	/^get_rxque(l2p_t *l2p, uint16_t lid, uint16_t pid)$/;"	f
get_tx_pid	lib/l2p.h	/^get_tx_pid(l2p_t *l2p, uint16_t lid, uint16_t idx)$/;"	f
get_txque	lib/l2p.h	/^get_txque(l2p_t *l2p, uint16_t lid, uint16_t pid)$/;"	f
get_type	lib/l2p.h	/^get_type(l2p_t *l2p, uint16_t lid)$/;"	f
gettQ	src/dpdk_gpu.c	/^void gettQ(struct tunnelQ **tmp){$/;"	f
gettQ	src/dpdk_gpuone.c	/^void gettQ(struct tunnelQ **tmp){$/;"	f
gpu_recv	src/util.c	/^double gpu_recv;$/;"	v
info	lib/dpdk_gpu.h	/^	port_info_t info[RTE_MAX_LCORE];$/;"	m	struct:ck_dpdk
info	lib/dpdk_gpuone.h	/^	port_info_t info[RTE_MAX_LCORE];$/;"	m	struct:ck_dpdk
info	lib/dpdkio.h	/^	port_info_t info[RTE_MAX_LCORE];$/;"	m	struct:ck_dpdk
inv_s	apps/lib/sbox.h	/^static const unsigned char inv_s[256] = {INV_S};$/;"	v
l2p	lib/dpdk_gpu.h	/^l2p_t *l2p;$/;"	v
l2p	lib/dpdk_gpuone.h	/^l2p_t *l2p;$/;"	v
l2p	lib/dpdkio.h	/^l2p_t *l2p;$/;"	v
l2p_create	lib/l2p.h	/^l2p_create(void)$/;"	f
l2p_t	lib/l2p.h	/^} l2p_t;$/;"	t	typeref:struct:__anon8
launch_one_lcore	src/dpdk_gpu.c	/^int launch_one_lcore(void *arg __rte_unused)$/;"	f
launch_one_lcore	src/dpdk_gpuone.c	/^int launch_one_lcore(void *arg __rte_unused)$/;"	f
launch_one_lcore	src/dpdkio.c	/^int launch_one_lcore(void *arg __rte_unused)$/;"	f
lcore_is_running	lib/dpdk_gpu.h	/^static __inline__ int32_t lcore_is_running(l2p_t *l2p, uint16_t lid)$/;"	f
lcore_is_running	lib/dpdk_gpuone.h	/^static __inline__ int32_t lcore_is_running(l2p_t *l2p, uint16_t lid)$/;"	f
lcore_is_running	lib/dpdkio.h	/^static __inline__ int32_t lcore_is_running(l2p_t *l2p, uint16_t lid)$/;"	f
lcores	lib/l2p.h	/^	lobj_t lcores[RTE_MAX_LCORE];$/;"	m	struct:__anon8
lid	lib/l2p.h	/^	uint16_t lid;$/;"	m	struct:__anon4
lids	lib/l2p.h	/^	uint16_t lids[RTE_MAX_LCORE];$/;"	m	struct:__anon5
lobj_t	lib/l2p.h	/^} lobj_t;	\/* lcore type and ports\/qids *\/$/;"	t	typeref:struct:__anon4
main	main/maingpu.c	/^int main(int argc, char ** argv)$/;"	f
main	main/maingpunf.c	/^int main(int argc, char ** argv)$/;"	f
main	main/mainio.c	/^int main(int argc, char ** argv)$/;"	f
main	test/core_seperation/sep.c	/^int main(void)$/;"	f
main	test/cudaMemcpy_test/MakeRandom.c	/^int main(void)$/;"	f
main	test/type_conversion/type_test.c	/^int main(void)$/;"	f
make_char_buf	src/util.c	/^void make_char_buf(struct rte_mbuf *buf[], unsigned char *pktQ, int head, int nb){$/;"	f
make_rte_buf	src/util.c	/^void make_rte_buf(unsigned char * pktQ, struct rte_mbuf **buf, int head, int nb){$/;"	f
map	lib/l2p.h	/^	rxtx_t map[MAX_MAP_PORTS][MAX_MAP_LCORES];$/;"	m	struct:__anon8
master	src/master.c	/^void master(void *data)$/;"	f
mbuf_pool	src/dpdk_gpu.c	/^struct rte_mempool *mbuf_pool;$/;"	v	typeref:struct:rte_mempool
mbuf_pool	src/dpdk_gpuone.c	/^struct rte_mempool *mbuf_pool;$/;"	v	typeref:struct:rte_mempool
monotonic_time	src/util.c	/^uint64_t monotonic_time(){$/;"	f
nb_lids	lib/l2p.h	/^	uint16_t nb_lids;$/;"	m	struct:__anon5
pg_dump_l2p	lib/l2p.h	/^pg_dump_l2p(l2p_t *l2p)$/;"	f
pg_inc_rx	lib/l2p.h	/^pg_inc_rx(l2p_t *l2p, uint16_t pid, uint16_t lid) {$/;"	f
pg_inc_tx	lib/l2p.h	/^pg_inc_tx(l2p_t *l2p, uint16_t pid, uint16_t lid) {$/;"	f
pg_lcore_is_running	lib/l2p.h	/^pg_lcore_is_running(l2p_t *l2p, uint16_t lid)$/;"	f
pg_new_rxque	lib/l2p.h	/^pg_new_rxque(l2p_t *l2p, uint16_t pid)$/;"	f
pg_new_txque	lib/l2p.h	/^pg_new_txque(l2p_t *l2p, uint16_t pid)$/;"	f
pg_raw_dump_l2p	lib/l2p.h	/^pg_raw_dump_l2p(l2p_t *l2p)$/;"	f
pg_set_lcore_priv	lib/l2p.h	/^pg_set_lcore_priv(l2p_t *l2p, uint16_t lid, void *ptr)$/;"	f
pg_set_port_priv	lib/l2p.h	/^pg_set_port_priv(l2p_t *l2p, uint16_t pid, void *ptr)$/;"	f
pg_start_lcore	lib/l2p.h	/^pg_start_lcore(l2p_t *l2p, uint16_t lid)$/;"	f
pg_stop_lcore	lib/l2p.h	/^pg_stop_lcore(l2p_t *l2p, uint16_t lid)$/;"	f
pid	lib/l2p.h	/^	uint16_t pid;$/;"	m	struct:__anon5
pids	lib/l2p.h	/^	pq_t pids;$/;"	m	struct:__anon4
pktRXQ	lib/util.h	/^	unsigned char* pktRXQ;$/;"	m	struct:tunnelQ
pktTXQ	lib/util.h	/^	unsigned char* pktTXQ;$/;"	m	struct:tunnelQ
pobj_t	lib/l2p.h	/^} pobj_t;	\/* ports pointer lcores *\/$/;"	t	typeref:struct:__anon5
portGroup	apps/lib/nids.h	/^struct portGroup{                                                        $/;"	s
port_info	lib/dpdk_gpu.h	/^typedef struct port_info{$/;"	s
port_info	lib/dpdk_gpuone.h	/^typedef struct port_info{$/;"	s
port_info	lib/dpdkio.h	/^typedef struct port_info{$/;"	s
port_info_t	lib/dpdk_gpu.h	/^}port_info_t;$/;"	t	typeref:struct:port_info
port_info_t	lib/dpdk_gpuone.h	/^}port_info_t;$/;"	t	typeref:struct:port_info
port_info_t	lib/dpdkio.h	/^}port_info_t;$/;"	t	typeref:struct:port_info
ports	lib/l2p.h	/^	pobj_t ports[RTE_MAX_ETHPORTS];$/;"	m	struct:__anon8
pq_s	lib/l2p.h	/^typedef struct pq_s {$/;"	s
pq_t	lib/l2p.h	/^} pq_t;$/;"	t	typeref:struct:pq_s
prev_stats	lib/dpdk_gpu.h	/^	eth_stats_t prev_stats;$/;"	m	struct:port_info
prev_stats	lib/dpdk_gpuone.h	/^	eth_stats_t prev_stats;$/;"	m	struct:port_info
prev_stats	lib/dpdkio.h	/^	eth_stats_t prev_stats;$/;"	m	struct:port_info
print_cur_stat	src/util.c	/^void print_cur_stat(const char ** u_str)$/;"	f
print_pkt	src/util.c	/^void print_pkt(unsigned char * ptr, int idx)$/;"	f
priv	lib/l2p.h	/^	void      *priv;$/;"	m	struct:__anon5
priv	lib/l2p.h	/^	void *priv;$/;"	m	struct:__anon4
put_map	lib/l2p.h	/^put_map(l2p_t *l2p, uint16_t pid, uint16_t lid, uint32_t rxtx)$/;"	f
qids	lib/l2p.h	/^	pq_t qids;$/;"	m	struct:__anon4
rhead	lib/util.h	/^	int rhead;$/;"	m	struct:tunnelQ
rol	apps/lib/ipsec.h	16;"	d
rte_ctrlmbuf_data	lib/dpdk.h	27;"	d
rx	lib/l2p.h	/^		uint16_t rx;$/;"	m	struct:__anon6::__anon7
rx	lib/l2p.h	/^	uint16_t rx[RTE_MAX_ETHPORTS];$/;"	m	struct:pq_s
rx_cnt	lib/l2p.h	/^	uint16_t rx_cnt;$/;"	m	struct:pq_s
rx_qid	lib/l2p.h	/^	uint16_t rx_qid;$/;"	m	struct:__anon5
rxtx	lib/l2p.h	/^	uint32_t rxtx;$/;"	m	union:__anon6
rxtx_t	lib/l2p.h	/^} rxtx_t;$/;"	t	typeref:union:__anon6
sbox	apps/lib/sbox.h	/^static const unsigned char sbox[256] = { SBOX };$/;"	v
seq	apps/lib/ipsec.h	/^	uint32_t seq;$/;"	m	struct:esphdr
sha1_gpu_context	apps/lib/ipsec.h	/^} sha1_gpu_context;$/;"	t	typeref:union:__anon2
sixteen	Makefile	/^sixteen := x x x x x x x x x x x x x x x x$/;"	m
spi	apps/lib/ipsec.h	/^	uint32_t spi;$/;"	m	struct:esphdr
start_lcore	lib/dpdk_gpu.h	/^static __inline__ void start_lcore(l2p_t *l2p, uint16_t lid)$/;"	f
start_lcore	lib/dpdk_gpuone.h	/^static __inline__ void start_lcore(l2p_t *l2p, uint16_t lid)$/;"	f
start_lcore	lib/dpdkio.h	/^static __inline__ void start_lcore(l2p_t *l2p, uint16_t lid)$/;"	f
state	apps/lib/ipsec.h	/^	uint32_t state[5];                                              $/;"	m	struct:__anon1
state	apps/lib/ipsec.h	/^	uint32_t state[6]; \/\/ For divide by 3. (5 --> 6)$/;"	m	union:__anon2
stop	lib/l2p.h	/^	volatile uint8_t stop[RTE_MAX_LCORE];$/;"	m	struct:__anon8
swp_hdr	src/util.c	/^void swp_hdr(unsigned char* ptr){$/;"	f
swp_hdr_buf	src/util.c	/^void swp_hdr_buf(struct rte_mbuf **buf, int head, int nb){$/;"	f
tQ	src/dpdk_gpu.c	/^static struct tunnelQ *tQ;$/;"	v	typeref:struct:tunnelQ	file:
tQ	src/dpdk_gpuone.c	/^static struct tunnelQ *tQ;$/;"	v	typeref:struct:tunnelQ	file:
thead	lib/util.h	/^	int thead;$/;"	m	struct:tunnelQ
thread_func	test/core_seperation/sep.c	/^void * thread_func(void * param)$/;"	f
tunnelQ	lib/util.h	/^struct tunnelQ{$/;"	s
tx	lib/l2p.h	/^		uint16_t tx;$/;"	m	struct:__anon6::__anon7
tx	lib/l2p.h	/^	uint16_t tx[RTE_MAX_ETHPORTS];$/;"	m	struct:pq_s
tx_cnt	lib/l2p.h	/^	uint16_t tx_cnt;$/;"	m	struct:pq_s
tx_qid	lib/l2p.h	/^	uint16_t tx_qid;$/;"	m	struct:__anon5
type	lib/l2p.h	/^	uint16_t type;$/;"	m	struct:__anon4
u_str	src/util.c	/^const char *u_str[] = {"", "K", "M", "G"};$/;"	v
unit	src/util.c	/^int unit = 0;$/;"	v
waste_time	test/core_seperation/sep.c	/^double waste_time(long n)$/;"	f
